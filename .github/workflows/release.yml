name: release

on:
  release:
    types: [published]

env:
  GO_VERSION: "1.24.1"

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      ASSET: ""
      BIN_NAME: gopack
    strategy:
      matrix:
        build:
          - linux-arm64
          - linux-x86_64
          - macos-arm64
          - macos-x86_64
          - windows-arm64
          - windows-x86_64
        include:
          - build: linux-arm64
            goos: linux
            goarch: arm64
          - build: linux-x86_64
            goos: linux
            goarch: amd64
          - build: macos-arm64
            goos: darwin
            goarch: arm64
          - build: macos-x86_64
            goos: darwin
            goarch: amd64
          - build: windows-arm64
            goos: windows
            goarch: arm64
          - build: windows-x86_64
            goos: windows
            goarch: amd64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set bin name
        if: ${{ matrix.goos == 'windows' }}
        run: echo "BIN_NAME=gopack.exe" >> $GITHUB_ENV

      - name: Go build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: "0"
        run: go build -trimpath -ldflags="-s -w" -o ${{ env.BIN_NAME }} ./cmd/gopack

      - name: Build archive
        if: ${{ matrix.goos != 'windows' }}
        shell: bash
        run: |
          staging="gopack-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}"
          tar czf "$staging.tar.gz" gopack
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Build archive
        if: ${{ matrix.goos == 'windows' }}
        shell: bash
        run: |
          staging="gopack-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}"
          zip "$staging.zip" gopack.exe
          echo "ASSET=$staging.zip" >> $GITHUB_ENV

      - name: Upload release archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ env.ASSET }}
